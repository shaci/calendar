// Generated by CoffeeScript 1.3.1
(function() {
  var CalendarViewModel;

  CalendarViewModel = function(options) {
    var calendar, createCalendar, date, getDay, init, months, parseDate, self;
    self = this;
    calendar = null;
    months = ["январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь"];
    date = null;
    init = function() {
      parseDate(options);
      createCalendar();
      return 0;
    };
    parseDate = function(value) {
      if (value instanceof Date) {
        date = value;
        date.setDate(1);
        return 0;
      } else {
        date = new Date(options.year, options.month - 1);
        return 0;
      }
    };
    getDay = function(date) {
      var day;
      day = date.getDay();
      if (!day) {
        day = 7;
      }
      return day - 1;
    };
    createCalendar = function() {
      var month, yearAfter, yearBefore, _i, _j, _ref, _ref1;
      calendar = '<tr>';
      yearAfter = yearBefore = date.getFullYear();
      for (_i = 0, _ref = getDay(date); 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--) {
        calendar += '<td></td>';
      }
      month = date.getMonth();
      while (date.getMonth() === month) {
        calendar += '<td>' + date.getDate() + '</td>';
        if (getDay(date) % 7 === 6) {
          calendar += '</tr><tr>';
        }
        date.setDate(date.getDate() + 1);
      }
      if (getDay(date) !== 0) {
        for (_j = _ref1 = getDay(date); _ref1 <= 7 ? _j < 7 : _j > 7; _ref1 <= 7 ? _j++ : _j--) {
          calendar += '<td></td>';
        }
      }
      calendar += '</tr>';
      yearAfter = date.getFullYear();
      if (yearAfter !== yearBefore) {
        date.setFullYear(yearBefore, month, 1);
      } else {
        date.setMonth(month, 1);
      }
      return 0;
    };
    self.prevMonth = function() {
      var month;
      month = date.getMonth();
      if (month === 0) {
        date.setFullYear(date.getFullYear() - 1, 11, 1);
      } else {
        date.setMonth(date.getMonth() - 1, 1);
      }
      createCalendar();
      self.calendar(calendar);
      self.date(months[date.getMonth()] + ' ' + (date.getYear() + 1900));
      return 0;
    };
    self.nextMonth = function() {
      var month;
      month = date.getMonth();
      if (month === 11) {
        date.setFullYear(date.getFullYear() + 1, 0, 1);
      } else {
        date.setMonth(date.getMonth() + 1, 1);
      }
      createCalendar();
      self.calendar(calendar);
      self.date(months[date.getMonth()] + ' ' + (date.getYear() + 1900));
      return 0;
    };
    init();
    self.calendar = ko.observable(calendar);
    self.date = ko.observable(months[date.getMonth()] + ' ' + (date.getYear() + 1900));
    return 0;
  };

  ko.applyBindings(new CalendarViewModel(new Date));

}).call(this);
